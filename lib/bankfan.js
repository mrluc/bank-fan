// Generated by CoffeeScript 1.4.0
(function() {
  var BankFan, Twit,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __slice = [].slice;

  Twit = require('twit');

  BankFan = (function() {

    BankFan.prototype.scores = {
      sue: -4,
      sued: -4,
      overdraft: -4,
      fees: -4,
      fee: -4,
      overdrawn: -4,
      bot: -4,
      foreclose: -8,
      foreclosure: -8,
      foreclosing: -8,
      lie: -4,
      account: -4,
      sucked: -4,
      sucks: -4,
      cares: 0,
      god: -4,
      routing: -4,
      thieves: -4,
      thieving: -8,
      nypd: -8,
      help: -3,
      checking: -3,
      app: 15,
      criminals: -8,
      banks: -1,
      unacceptable: -4,
      atm: -8,
      atms: -8
    };

    function BankFan(credentials, opts) {
      this.respond_if_necessary = __bind(this.respond_if_necessary, this);

      this.annoy = __bind(this.annoy, this);

      var k, v,
        _this = this;
      for (k in opts) {
        v = opts[k];
        this[k] = v;
      }
      this.twit = new Twit(credentials);
      this.twit.get('application/rate_limit_status', function(err, _arg, res) {
        _this.resources = _arg.resources;
        return _this.log(_this.resources);
      });
      this.annoy();
    }

    BankFan.prototype.annoy = function() {
      var stream,
        _this = this;
      stream = this.twit.stream('statuses/filter', {
        track: this.track,
        lang: this.lang
      });
      return stream.on('tweet', function(tweet) {
        var _ref;
        if (tweet.retweeted_status != null) {
          tweet = tweet.retweeted_status;
        }
        if ((tweet != null ? (_ref = tweet.user) != null ? _ref.id : void 0 : void 0) != null) {
          return _this.respond_if_necessary(tweet, function() {
            var args;
            args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
            return _this.log("RESPONDED TO", args, tweet);
          });
        }
      });
    };

    BankFan.prototype.respond_if_necessary = function(_arg, after) {
      var id, screen_name, text, _ref,
        _this = this;
      id = _arg.id, text = _arg.text, (_ref = _arg.user, screen_name = _ref.screen_name);
      return require('sentiment')(text, this.scores, function(err, result) {
        var status;
        _this.log("SENTIMENT ANALYSIS: ", text, screen_name, JSON.stringify(result));
        if (Math.abs(result.score) > _this.intensity) {
          status = -_this.intensity > result.score ? "@" + screen_name + " maybe @BofA_Help has some input here? http://goo.gl/OGbaP" : "@" + screen_name + " Bank of America really rocks. http://goo.gl/OGbaP";
          _this.log("TWEETING " + status);
          if (_this.live) {
            return _this.twit.post('statuses/update', {
              in_reply_to_status_id: id,
              status: status
            }, after);
          }
        }
      });
    };

    BankFan.prototype.log = function() {
      var args, s, _i, _len, _results;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      _results = [];
      for (_i = 0, _len = args.length; _i < _len; _i++) {
        s = args[_i];
        _results.push(console.log(s));
      }
      return _results;
    };

    return BankFan;

  })();

  module.exports = BankFan;

}).call(this);
